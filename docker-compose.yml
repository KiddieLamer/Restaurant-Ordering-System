version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: restaurant-db
    environment:
      POSTGRES_USER: restaurant_user
      POSTGRES_PASSWORD: restaurant_pass
      POSTGRES_DB: restaurant_orders
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - restaurant-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: restaurant-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://restaurant_user:restaurant_pass@postgres:5432/restaurant_orders
      - JWT_SECRET=your_secure_jwt_secret_here
      - MIDTRANS_SERVER_KEY=your_midtrans_server_key
      - MIDTRANS_CLIENT_KEY=your_midtrans_client_key
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - restaurant-network
    volumes:
      - ./backend:/app
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: restaurant-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - restaurant-network

  adminer:
    image: adminer
    container_name: restaurant-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - restaurant-network

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres_data: